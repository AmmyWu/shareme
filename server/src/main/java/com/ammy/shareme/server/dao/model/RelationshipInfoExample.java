package com.ammy.shareme.server.dao.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RelationshipInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    public RelationshipInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFocusIdIsNull() {
            addCriterion("focus_id is null");
            return (Criteria) this;
        }

        public Criteria andFocusIdIsNotNull() {
            addCriterion("focus_id is not null");
            return (Criteria) this;
        }

        public Criteria andFocusIdEqualTo(Integer value) {
            addCriterion("focus_id =", value, "focusId");
            return (Criteria) this;
        }

        public Criteria andFocusIdNotEqualTo(Integer value) {
            addCriterion("focus_id <>", value, "focusId");
            return (Criteria) this;
        }

        public Criteria andFocusIdGreaterThan(Integer value) {
            addCriterion("focus_id >", value, "focusId");
            return (Criteria) this;
        }

        public Criteria andFocusIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("focus_id >=", value, "focusId");
            return (Criteria) this;
        }

        public Criteria andFocusIdLessThan(Integer value) {
            addCriterion("focus_id <", value, "focusId");
            return (Criteria) this;
        }

        public Criteria andFocusIdLessThanOrEqualTo(Integer value) {
            addCriterion("focus_id <=", value, "focusId");
            return (Criteria) this;
        }

        public Criteria andFocusIdIn(List<Integer> values) {
            addCriterion("focus_id in", values, "focusId");
            return (Criteria) this;
        }

        public Criteria andFocusIdNotIn(List<Integer> values) {
            addCriterion("focus_id not in", values, "focusId");
            return (Criteria) this;
        }

        public Criteria andFocusIdBetween(Integer value1, Integer value2) {
            addCriterion("focus_id between", value1, value2, "focusId");
            return (Criteria) this;
        }

        public Criteria andFocusIdNotBetween(Integer value1, Integer value2) {
            addCriterion("focus_id not between", value1, value2, "focusId");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdIsNull() {
            addCriterion("follow_user_id is null");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdIsNotNull() {
            addCriterion("follow_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdEqualTo(Integer value) {
            addCriterion("follow_user_id =", value, "followUserId");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdNotEqualTo(Integer value) {
            addCriterion("follow_user_id <>", value, "followUserId");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdGreaterThan(Integer value) {
            addCriterion("follow_user_id >", value, "followUserId");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("follow_user_id >=", value, "followUserId");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdLessThan(Integer value) {
            addCriterion("follow_user_id <", value, "followUserId");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("follow_user_id <=", value, "followUserId");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdIn(List<Integer> values) {
            addCriterion("follow_user_id in", values, "followUserId");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdNotIn(List<Integer> values) {
            addCriterion("follow_user_id not in", values, "followUserId");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdBetween(Integer value1, Integer value2) {
            addCriterion("follow_user_id between", value1, value2, "followUserId");
            return (Criteria) this;
        }

        public Criteria andFollowUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("follow_user_id not between", value1, value2, "followUserId");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdIsNull() {
            addCriterion("focus_user_id is null");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdIsNotNull() {
            addCriterion("focus_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdEqualTo(Integer value) {
            addCriterion("focus_user_id =", value, "focusUserId");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdNotEqualTo(Integer value) {
            addCriterion("focus_user_id <>", value, "focusUserId");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdGreaterThan(Integer value) {
            addCriterion("focus_user_id >", value, "focusUserId");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("focus_user_id >=", value, "focusUserId");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdLessThan(Integer value) {
            addCriterion("focus_user_id <", value, "focusUserId");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("focus_user_id <=", value, "focusUserId");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdIn(List<Integer> values) {
            addCriterion("focus_user_id in", values, "focusUserId");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdNotIn(List<Integer> values) {
            addCriterion("focus_user_id not in", values, "focusUserId");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdBetween(Integer value1, Integer value2) {
            addCriterion("focus_user_id between", value1, value2, "focusUserId");
            return (Criteria) this;
        }

        public Criteria andFocusUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("focus_user_id not between", value1, value2, "focusUserId");
            return (Criteria) this;
        }

        public Criteria andOperationFlagIsNull() {
            addCriterion("operation_flag is null");
            return (Criteria) this;
        }

        public Criteria andOperationFlagIsNotNull() {
            addCriterion("operation_flag is not null");
            return (Criteria) this;
        }

        public Criteria andOperationFlagEqualTo(Integer value) {
            addCriterion("operation_flag =", value, "operationFlag");
            return (Criteria) this;
        }

        public Criteria andOperationFlagNotEqualTo(Integer value) {
            addCriterion("operation_flag <>", value, "operationFlag");
            return (Criteria) this;
        }

        public Criteria andOperationFlagGreaterThan(Integer value) {
            addCriterion("operation_flag >", value, "operationFlag");
            return (Criteria) this;
        }

        public Criteria andOperationFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("operation_flag >=", value, "operationFlag");
            return (Criteria) this;
        }

        public Criteria andOperationFlagLessThan(Integer value) {
            addCriterion("operation_flag <", value, "operationFlag");
            return (Criteria) this;
        }

        public Criteria andOperationFlagLessThanOrEqualTo(Integer value) {
            addCriterion("operation_flag <=", value, "operationFlag");
            return (Criteria) this;
        }

        public Criteria andOperationFlagIn(List<Integer> values) {
            addCriterion("operation_flag in", values, "operationFlag");
            return (Criteria) this;
        }

        public Criteria andOperationFlagNotIn(List<Integer> values) {
            addCriterion("operation_flag not in", values, "operationFlag");
            return (Criteria) this;
        }

        public Criteria andOperationFlagBetween(Integer value1, Integer value2) {
            addCriterion("operation_flag between", value1, value2, "operationFlag");
            return (Criteria) this;
        }

        public Criteria andOperationFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("operation_flag not between", value1, value2, "operationFlag");
            return (Criteria) this;
        }

        public Criteria andCancelFlagIsNull() {
            addCriterion("cancel_flag is null");
            return (Criteria) this;
        }

        public Criteria andCancelFlagIsNotNull() {
            addCriterion("cancel_flag is not null");
            return (Criteria) this;
        }

        public Criteria andCancelFlagEqualTo(Integer value) {
            addCriterion("cancel_flag =", value, "cancelFlag");
            return (Criteria) this;
        }

        public Criteria andCancelFlagNotEqualTo(Integer value) {
            addCriterion("cancel_flag <>", value, "cancelFlag");
            return (Criteria) this;
        }

        public Criteria andCancelFlagGreaterThan(Integer value) {
            addCriterion("cancel_flag >", value, "cancelFlag");
            return (Criteria) this;
        }

        public Criteria andCancelFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("cancel_flag >=", value, "cancelFlag");
            return (Criteria) this;
        }

        public Criteria andCancelFlagLessThan(Integer value) {
            addCriterion("cancel_flag <", value, "cancelFlag");
            return (Criteria) this;
        }

        public Criteria andCancelFlagLessThanOrEqualTo(Integer value) {
            addCriterion("cancel_flag <=", value, "cancelFlag");
            return (Criteria) this;
        }

        public Criteria andCancelFlagIn(List<Integer> values) {
            addCriterion("cancel_flag in", values, "cancelFlag");
            return (Criteria) this;
        }

        public Criteria andCancelFlagNotIn(List<Integer> values) {
            addCriterion("cancel_flag not in", values, "cancelFlag");
            return (Criteria) this;
        }

        public Criteria andCancelFlagBetween(Integer value1, Integer value2) {
            addCriterion("cancel_flag between", value1, value2, "cancelFlag");
            return (Criteria) this;
        }

        public Criteria andCancelFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("cancel_flag not between", value1, value2, "cancelFlag");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(Date value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(Date value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(Date value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(Date value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(Date value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<Date> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<Date> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(Date value1, Date value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(Date value1, Date value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table relationship_info
     *
     * @mbggenerated do_not_delete_during_merge Tue Jul 09 18:50:38 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table relationship_info
     *
     * @mbggenerated Tue Jul 09 18:50:38 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}